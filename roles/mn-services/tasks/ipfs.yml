---

- name: copy IPFS init script
  copy:
    src: ipfs/init.sh
    dest: '{{ mn_services_path }}/ipfs/'
    mode: +rx

- name: generate IPFS swarm key
  docker_container:
    image: golang:1.9
    name: ipfs-swarm-key-gen
    command: sh -c 'go get github.com/Kubuxu/go-ipfs-swarm-key-gen/ipfs-swarm-key-gen && ipfs-swarm-key-gen'
    detach: no
    auto_remove: yes
  register: ipfs-swarm-key-gen
  when: inventory_hostname == groups['masternodes'][0]

- debug:
    var: ipfs-swarm-key-gen
  when: inventory_hostname == groups['masternodes'][0]

#- set_fact:
#    ipfs_swarm_key: "{{ hostvars[groups['masternodes'][0]] ipfs-swarm-key-gen.stdout }}"
#
#- name: start IPFS bootstrap node
#  docker_service:
#    project_src: '{{ mn_services_path }}'
#    services:
#      - ipfs
#    state: present
#    pull: yes
#  when: inventory_hostname == groups['masternodes'][0]
#
#- name: get IPFS bootstrap node ID
#  command: docker exec {{ mn_services_dir }}_ipfs_1 ipfs id --format '<id>'
#  register: ipfs_id_result
#
#- set_fact:
#    ipfs_swarm_peer: /ip4/{{ hostvars[groups['masternodes'][0]].private_ip }}/tcp/5001/ipfs/{{ ipfs_id_result.stdout }}
#
#- name: stop IPFS bootstrap node
#  docker_service:
#    project_src: {{ mn_services_path }}
#    services:
#    - ipfs
#    state: absent
#    pull: yes
#  run_once: true
