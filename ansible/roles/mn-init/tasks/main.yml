---

- name: Wait for wallet sync
  register: blockchain_status
  command: dash-cli getblockchaininfo
  retries: 100
  delay: 60
  until: blockchain_status.stdout|from_json|json_query("blocks") == blockchain_status.stdout|from_json|json_query("headers")

- name: Force mnsync next
  command: dash-cli mnsync next
  register: result
  changed_when: '"FINISHED" not in result.stdout'

- name: Wait for blockchain sync
  command: dash-cli mnsync status
  register: mnsync_status
  retries: 100
  delay: 60
  until: mnsync_status.stdout|from_json|json_query("IsBlockchainSynced") == true

- name: Force mnsync next (again)
  command: dash-cli mnsync next

- name: Wait for wallet to sync with blockchain
  command: dash-cli mnsync status
  register: mnsync_status
  retries: 100
  delay: 60
  until: mnsync_status.stdout|from_json|json_query("IsSynced") == true
  changed_when: mnsync_status.stdout|from_json|json_query("IsSynced") == true

- name: Get list of ProTx transactions from the wallet
  command: dash-cli protx list wallet true
  register: get_protx_list_result
  changed_when: get_protx_list_result.stdout | to_json | length > 0

- name: Get names of registered masternodes
  set_fact:
    registered_masternode_names: "{{ registered_masternode_names | default([]) + [item] }}"
  when: get_protx_list_result.stdout|from_json|json_query("[?state.ownerAddress=='" + masternodes[item].owner.address + "']")
  with_items: '{{ groups["masternodes"] }}'

- name: Registered masternodes list
  debug:
    var: registered_masternode_names

- name: Determine new masternodes
  set_fact:
    new_masternode_names: "{{ groups['masternodes'] | difference(registered_masternode_names) }}"

- name: New masternodes list
  debug:
    var: new_masternode_names

- name: Get list of banned masternodes from the wallet
  set_fact:
    banned_masternodes_list: "{{ get_protx_list_result.stdout | from_json | json_query('[?state.PoSeBanHeight > `0`]') }}"

- name: Get names of banned masternodes
  set_fact:
    banned_masternode_names: "{{ banned_masternode_names | default([]) + [item] }}"
  when: banned_masternodes_list|json_query("[?state.ownerAddress=='" + masternodes[item].owner.address + "']")
  with_items: '{{ registered_masternode_names }}'

- name: Banned masternodes list
  debug:
    var: banned_masternode_names

- name: Fund collaterals for not initialized masternodes
  include_role:
    name: mn-fund-collateral
  vars:
    masternode_names: "{{ new_masternode_names }}"
  when: new_masternode_names|length > 0

- name: Create pro tx for not initialized masternodes
  include_role:
    name: mn-createprotx
  vars:
    masternode_names: "{{ new_masternode_names }}"
  when: new_masternode_names|length > 0

- name: Unban banned masternodes
  include_role:
    name: mn-unban
  vars:
    masternode_names: "{{ banned_masternode_names }}"
  when: banned_masternode_names|length > 0
