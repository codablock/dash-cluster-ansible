---

- name: Check dashmate config for ZeroSSL certificate ID
  ansible.builtin.command: "{{ dashmate_cmd }} config get platform.dapi.envoy.ssl.providerConfigs.zerossl.id"
  become: true
  become_user: dashmate
  args:
    chdir: '{{ dashmate_cwd }}'
  register: dashmate_zerossl_id
  changed_when: dashmate_zerossl_id.rc == 0 and dashmate_zerossl_id.stdout != 'null'

# - name: Set ZeroSSL certificate ID from dashmate config
#   ansible.builtin.set_fact:
#     dashmate_platform_dapi_envoy_ssl_provider_config_zerossl_id: "{{ dashmate_zerossl_id.stdout }}"
#   when: dashmate_zerossl_id.stdout != 'null'

- name: Check SSM parameter store for ZeroSSL certificate ID
  delegate_to: localhost
  become: false
  ansible.builtin.set_fact:
    ssm_zerossl_id: "{{ lookup('aws_ssm', '/network-deploy/{{ dash_network_name }}/{{ inventory_hostname }}/zerossl-id', on_missing='skip') }}"
  changed_when: ssm_zerossl_id is defined and ssm_zerossl_id != 'null'
  when: dashmate_zerossl_id.stdout == 'null'

- name: Set ZeroSSL certificate ID from SSM
  ansible.builtin.set_fact:
    dashmate_platform_dapi_envoy_ssl_provider_config_zerossl_id: "{{ dashmate_zerossl_id.stdout if dashmate_zerossl_id.stdout != 'null' else ssm_zerossl_id }}"
  when: >
    ssm_zerossl_id is defined and ssm_zerossl_id != '' and ssm_zerossl_id != 'null' or
    dashmate_zerossl_id.stdout != 'null'

- debug: var=dashmate_platform_dapi_envoy_ssl_provider_config_zerossl_id

- name: Check that private key exists
  stat:
    path: '{{ dashmate_config_dir }}/ssl/{{ dash_network_name }}/private.key'
  register: private_key_file

- name: Get ZeroSSL private key from SSM if not present
  ansible.builtin.copy:
    dest: '{{ dashmate_config_dir }}/ssl/{{ dash_network_name }}/private.key'
    content: "{{ lookup('aws_ssm', '/network-deploy/{{ dash_network_name }}/{{ inventory_hostname }}/zerossl-pem-private-key', on_missing='skip') | b64decode }}"
    owner: '{{ dashmate_user }}'
    group: '{{ dashmate_group }}'
    mode: "0644"
  when: >
    private_key_file.stat.exists == false and 
    dashmate_platform_dapi_envoy_ssl_provider_config_zerossl_id is defined

# Init dashmate here
- name: Write dashmate's config file
  vars:
    template_bootstrap_peers: "{{ groups.seed_nodes | reject('equalto', inventory_hostname) }}"
  ansible.builtin.template:
    src: dashmate.json.j2
    dest: '{{ dashmate_config_dir }}/config.json'
    owner: '{{ dashmate_user }}'
    group: '{{ dashmate_group }}'
    mode: "0644"

# Do we need this just to run dashmate config get?
- name: Export current dashmate config
  ansible.builtin.shell: "{{ dashmate_cmd }} config envs > {{ dashmate_home }}/.env"
  become: true
  become_user: dashmate
  args:
    chdir: '{{ dashmate_cwd }}'
  register: dashmate_envs
  changed_when: dashmate_envs.rc == 0

- name: Obtain ZeroSSL certificate for DAPI
  ansible.builtin.command: "{{ dashmate_cmd }} ssl obtain --verbose"
  become: true
  become_user: dashmate
  args:
    chdir: '{{ dashmate_cwd }}'
  register: dashmate_obtain
  changed_when: dashmate_obtain.rc == 0
  when: dashmate_platform_dapi_envoy_ssl_provider_config_zerossl_id is undefined

# ZeroSSL ID must exist in config at this point, update dashmate_zerossl_id in all cases
- name: Obtain ZeroSSL certificate ID from dashmate config
  ansible.builtin.command: "{{ dashmate_cmd }} config get platform.dapi.envoy.ssl.providerConfigs.zerossl.id"
  become: true
  become_user: dashmate
  args:
    chdir: '{{ dashmate_cwd }}'
  register: dashmate_zerossl_id
  changed_when: dashmate_zerossl_id.rc == 0 and dashmate_zerossl_id.stdout != 'null'

- name: Update ZeroSSL ID in AWS SSM parameter store
  delegate_to: localhost
  become: false
  community.aws.ssm_parameter:
    name: '/network-deploy/{{ dash_network_name }}/{{ inventory_hostname }}/zerossl-id'
    value: '{{ dashmate_zerossl_id.stdout }}'

- name: Read ZeroSSL private key from file
  ansible.builtin.slurp:
    src: '{{ dashmate_config_dir }}/ssl/{{ dash_network_name }}/private.key'
  register: dashmate_zerossl_private_key

- name: Update ZeroSSL PEM private key in AWS SSM parameter store
  delegate_to: localhost
  become: false
  community.aws.ssm_parameter:
    name: '/network-deploy/{{ dash_network_name }}/{{ inventory_hostname }}/zerossl-pem-private-key'
    value: '{{ dashmate_zerossl_private_key.content }}'
