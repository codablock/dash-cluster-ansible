---

# Requires "masternode_names" variable

- name: import masternode collateral private key
  command: 'dash-cli {{ masternode_wallet_rpc_args }} importprivkey {{ masternodes[item].collateral.private_key }} "" false'
  with_items: '{{ masternode_names }}'

- name: rescan blockchain
  command: 'dash-cli {{ masternode_wallet_rpc_args }} rescanblockchain'

# check

- name: resetting collateral_ok_count
  set_fact:
    collateral_ok_count: 0

- include_role:
    name: mn-find-collateral
  vars:
    masternode: "{{ masternodes[item] }}"
    masternode_name: "{{ item }}"
  with_items: '{{ masternode_names }}'

- name: updating collateral_all_ok
  set_fact:
    collateral_all_ok: "{{ collateral_ok_count|int == masternode_names|length }}"

- debug: msg="collateral_ok_count={{ collateral_ok_count }}"

# ensure faucet balance

- name: check faucet balance
  command: 'dash-cli {{ faucet_rpc_args }} getbalance'
  register: faucet_balance

- name: generate enough blocks to fund collaterals
  include_role:
    name: generate-blocks
  vars:
    num_blocks: 0
    balance_needed: "{{ (masternode_names|length - collateral_ok_count|int) * 1000 }}"
  when: (not collateral_all_ok) and (faucet_balance.stdout|int < balance_needed|int)

# TODO: this will fund all masternodes, not just those with missing collateral. collateral_ok_masternode_1 was partially implemented, check again later
# https://github.com/dashpay/dash-network-deploy/blob/v0.23-dev/ansible/roles/mn-fund-collateral/tasks/main.yml#L48

- name: Populate payment targets
  set_fact:
    uncollateralized_addresses: "{{ uncollateralized_addresses | default( [] ) + [ masternodes[item].collateral.address ] }}"
  with_items:
    - '{{ masternode_names }}'
  when: not collateral_all_ok

# fund

- include_tasks: fund_collateral.yml
  vars:
    amount: 1000
    payment_targets: '{{ uncollateralized_addresses }}'
  when: not collateral_all_ok

# verify

- name: resetting collateral_ok_count
  set_fact:
    collateral_ok_count: 0
  when: not collateral_all_ok

- include_role:
    name: mn-find-collateral
  vars:
    masternode: "{{ masternodes[item] }}"
    masternode_name: "{{ item }}"
  when: not collateral_all_ok
  with_items: '{{ masternode_names }}'

- fail:
    msg: funding was not successful
  when: not collateral_all_ok and collateral_ok_count|int != masternode_names|length

- name: generate at least one block to confirm funding transactions
  include_role:
    name: generate-blocks
  vars:
    num_blocks: 1
    balance_needed: 0
  when: not collateral_all_ok
