---

# Requires "masternode_names" variable

- name: Import masternode collateral private key
  ansible.builtin.command: 'dash-cli -rpcwallet={{ wallet_rpc_wallet_mno }} importprivkey {{ masternodes[item].collateral.private_key }} "" false'
  with_items: '{{ masternode_names }}'
  register: result
  changed_when: result.rc == 0

- name: Rescan blockchain
  ansible.builtin.command: 'dash-cli -rpcwallet={{ wallet_rpc_wallet_mno }} rescanblockchain'
  register: result
  changed_when: result.stdout | to_json | json_query('stop_height') | int > 1

# check

- name: Reset collateral_ok_count
  ansible.builtin.set_fact:
    collateral_ok_count: 0

- name: Find existing masternode collaterals
  ansible.builtin.include_role:
    name: mn_find_collateral
  vars:
    masternode: "{{ masternodes[item] }}"
    masternode_name: "{{ item }}"
  with_items: '{{ masternode_names }}'

- name: Update collateral_all_ok
  ansible.builtin.set_fact:
    collateral_all_ok: "{{ collateral_ok_count | int == masternode_names | length }}"

- name: Show collateral_ok_count
  ansible.builtin.debug:
    msg: 'collateral_ok_count={{ collateral_ok_count }}'

# ensure faucet balance

- name: Check faucet balance
  ansible.builtin.command: 'dash-cli -rpcwallet={{ wallet_rpc_wallet_faucet }} getbalance'
  register: faucet_balance
  changed_when: faucet_balance.stdout | int > 0

- name: Generate enough blocks to fund collaterals
  ansible.builtin.include_role:
    name: generate_blocks
  vars:
    num_blocks: 0
    balance_needed: "{{ (masternode_names | length - collateral_ok_count | int) * 1000 }}"
  when: not collateral_all_ok and (faucet_balance.stdout | int < balance_needed | int)

# TODO: this will fund all masternodes, not just those with missing collateral. collateral_ok_masternode_1 was partially implemented, check again later
# https://github.com/dashpay/dash-network-deploy/blob/v0.23-dev/ansible/roles/mn-fund-collateral/tasks/main.yml#L48

- name: Populate payment targets
  ansible.builtin.set_fact:
    uncollateralized_addresses: "{{ uncollateralized_addresses | default([]) + [masternodes[item].collateral.address] }}"
  with_items:
    - '{{ masternode_names }}'
  when: not collateral_all_ok

# fund

- name: Fund masternode collaterals
  ansible.builtin.include_tasks:
    file: fund_collateral.yml
  vars:
    amount: 1000
    payment_targets: '{{ uncollateralized_addresses }}'
  when: not collateral_all_ok

# verify

- name: Reset collateral_ok_count
  ansible.builtin.set_fact:
    collateral_ok_count: 0
  when: not collateral_all_ok

- name: Find existing masternode collaterals
  ansible.builtin.include_role:
    name: mn_find_collateral
  vars:
    masternode: "{{ masternodes[item] }}"
    masternode_name: "{{ item }}"
  when: not collateral_all_ok
  with_items: '{{ masternode_names }}'

- name: Fail if funding unsuccessful
  ansible.builtin.fail:
    msg: funding was not successful
  when: not collateral_all_ok and collateral_ok_count | int != masternode_names | length

- name: Generate at least one block to confirm funding transactions
  ansible.builtin.include_role:
    name: generate_blocks
  vars:
    num_blocks: 1
    balance_needed: 0
  when: not collateral_all_ok
