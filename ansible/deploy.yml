---

# Bootstrap

- name: Remove latency on masternodes before deployment starts
  hosts: masternodes,hp_masternodes
  become: true
  roles:
    - remove_fake_latency
  tags:
    - full_deploy
    - maintenance

- name: Set up swap and aws environment vars
  hosts: all
  gather_facts: true
  become: true
  pre_tasks:
    - name: Check if inside AWS
      ansible.builtin.uri:
        url: http://169.254.169.254/latest/meta-data
        timeout: 2
      register: aws_uri_check
      failed_when: false
    - name: Set AWS environment variable
      ansible.builtin.set_fact:
        is_aws_environment: '{{ aws_uri_check.status == 200 }}'
  roles:
    - role: aws
      when: is_aws_environment
    - swap
  tags:
    - full_deploy
    - infra_setup

- name: Setup VPN
  hosts: vpn
  become: true
  roles:
    - role: openvpn
      when: openvpn_enabled
  tags:
    - full_deploy
    - infra_setup
    - vpn

- name: Setup jq, Python, CWAgent and Docker
  hosts: all
  become: true
  pre_tasks:
    - name: Update apt cache and install jq
      ansible.builtin.apt:
        pkg:
          - jq
          - unzip
        update_cache: true
  vars:
    pip_package: python3-pip
    pip_install_packages:
      - name: docker
        version: "6.0.1"
      - name: docker-compose
        version: "1.29.2"
      - name: requests
        version: "2.31.0"
  roles:
    - geerlingguy.pip
    - role: geerlingguy.docker
      vars:
        docker_apt_arch: "{{ 'amd64' if ansible_architecture == 'x86_64' else 'arm64' }}"
        docker_install_compose: false
        docker_users:
          - ubuntu
    - docker_options
    - eternal_terminal
    - cwagent
  tags:
    - full_deploy
    - infra_setup

- name: Configure tcpdump
  hosts: all
  become: true
  roles:
    - role: tcpdumpd
      when: dashd_network_logging != 0
  tags:
    - full_deploy
    - infra_setup

- name: Setup logs
  hosts: logs_nodes
  become: true
  roles:
    - elastic_stack
    - metricbeat
  tags:
    - full_deploy
    - infra_setup

- name: Setup load tester
  hosts: load_test
  become: true
  roles:
    - role: protobuf_compiler
    - role: load_tool
  tags:
    - full_deploy
    - infra_setup

- name: Setup metrics
  hosts: metrics
  become: true
  roles:
    - metrics
    - metricbeat
  tags:
    - full_deploy
    - infra_setup

- name: Set up miners
  hosts: miners
  become: true
  roles:
    - role: dash_cli
    - role: dashd
      tags:
        - dashd
    - core_filebeat
    - metricbeat
  tags:
    - full_deploy

- name: Set up mixers
  hosts: mixer_nodes
  become: true
  roles:
    - role: dash_cli
    - role: dashd
      tags:
        - dashd
    - core_filebeat
    - metricbeat
  tags:
    - full_deploy

- name: Set up core and tenderdash on seed nodes
  hosts: seed_nodes
  become: true
  pre_tasks:
    - name: Set node variables for seed nodes
      ansible.builtin.set_fact:
        node: "{{ seed_nodes[inventory_hostname] }}"
        mode: "seed"
      tags: always
      when: inventory_hostname in seed_nodes
  roles:
    - role: dash_cli
    - role: dashd
      dashd_listen: true
      dashd_zmq: true
      dashd_indexes: true
      tags:
        - dashd
    - role: tenderdash
    - core_filebeat
    - metricbeat
  tags:
    - full_deploy
    - core_update
    - platform_update

- name: Set up core on masternodes
  hosts: masternodes
  become: true
  pre_tasks:
    - name: Check inventory for masternodes
      ansible.builtin.set_fact:
        masternode: "{{ masternodes[inventory_hostname] }}"
      tags: always
      when: inventory_hostname in masternodes
    - name: Fail if no masternodes present
      ansible.builtin.fail:
        msg: Masternode not defined in network config
      when: masternode is not defined
  roles:
    - role: dash_cli
    - role: dashd
      dashd_listen: true
      dashd_zmq: true
      dashd_indexes: true
      tags:
        - dashd
    - mn_status_report
    - core_filebeat
    - metricbeat
  tags:
    - full_deploy
    - core_update
    - update_masternodes


# Start network

- name: Generate first block to leave IBD mode
  hosts: seed-1
  become: true
  roles:
    - role: generate_firstblock
      when: dash_network == "devnet" or dash_network == "regtest"
  tags:
    - full_deploy

- name: Start miner
  hosts: miners
  become: true
  roles:
    - role: dashd_generate_miner
      when: dash_network != "mainnet"
  tags:
    - full_deploy

- name: Setup faucet and insight
  hosts: web
  become: true
  roles:
    - multifaucet
    - role: dash_cli
    - role: dashd
      dashd_indexes: true
      dashd_zmq: true
      dashd_listen: true
    - insight
    - core_filebeat
    - metricbeat
  tags:
    - full_deploy
    - web

- name: Set up wallets
  hosts: wallet_nodes
  become: true
  roles:
    - role: dash_cli
    - role: dashd
      dashd_indexes: true
      dashd_zmq: true
      enable_wallet: true
      tags:
        - dashd
    - core_filebeat
    - metricbeat
  tags:
    - full_deploy
    - core_update

# Register masternodes and set sporks

- name: Register masternodes
  hosts: wallet_nodes
  become: true
  roles:
    - role: mn_init
      mnlist: "{{ masternodes }}"
      funding_amount: "{{ masternode_collaterals.mn | int }}"
  tags:
    - full_deploy
    - unban_masternodes

- name: Update inventory with protx values
  hosts: wallet_nodes
  roles:
    - role: mn_protx_config
      mnlist: "{{ masternodes }}"
  tags:
    - full_deploy
    - unban_masternodes

- name: Register HP masternodes
  hosts: wallet_nodes
  become: true
  roles:
    - role: mn_init
      mnlist: "{{ hp_masternodes }}"
      funding_amount: "{{ masternode_collaterals.hpmn | int }}"
  tags:
    - full_deploy
    - unban_hp_masternodes

- name: Update inventory with HPMN protx values
  hosts: wallet_nodes
  roles:
    - role: mn_protx_config
      mnlist: "{{ hp_masternodes }}"
  tags:
    - full_deploy
    - unban_hp_masternodes


- name: Fund load tester nodes
  hosts: wallet_nodes
  become: true
  tasks:
    - name: Extract load tester addresses
      ansible.builtin.set_fact:
        load_tester_addresses: "{{ load_testers.values() | map(attribute='wallet.address') | list }}"

    - name: Include funding for load testers
      ansible.builtin.include_tasks: ./roles/mn_fund_collateral/tasks/fund_collateral.yml
      vars:
        payment_targets: "{{ load_tester_addresses }}"
        amount: "{{ load_tester_wallet_amount }}"
  tags:
    - full_deploy

- name: Activate sporks
  hosts: wallet_nodes
  become: true
  roles:
    - role: activate_dashd_sporks
      when: dash_network != "mainnet" and dash_network != "testnet"
      delegate_to: '{{ play_hosts | first }}'
  tags:
    - full_deploy

# todo: partially working code causes errors in deploy, comment out for now and fix later
# - name: Create governance proposals
#   hosts: wallet_nodes
#   become: true
#   roles:
#     - role: generate_proposals
#       when: governance_proposal_count > 0

- name: Set up core and platform on HP masternodes
  hosts: hp_masternodes
  become: true
  pre_tasks:
    - name: Check inventory for HP masternodes
      ansible.builtin.set_fact:
        node: "{{ hp_masternodes[inventory_hostname] }}"
      tags: always
      when: inventory_hostname in hp_masternodes
  roles:
    - role: dash_cli
    - role: dashmate
    - role: mn_status_report
    - role: metricbeat
  tags:
    - full_deploy
    - platform_update
    - update_hp_masternodes

- name: Set up protx diff script
  hosts: masternodes
  become: true
  roles:
    - role: mn_protx_diff
  tags:
    - full_deploy
    - maintenance

- name: Set up fake latency on masternodes
  hosts: hp_masternodes,masternodes
  become: true
  roles:
    - role: add_fake_latency
      when: masternode_network_latency
    - role: remove_fake_latency
      when: not masternode_network_latency
  tags:
    - full_deploy
    - maintenance

- name: Generate dash.conf for configs repo
  hosts: localhost
  roles:
    - dash-conf
  tags:
    - full_deploy

- name: Clean up
  hosts: all
  become: true
  tasks:
    - name: Prune unused Docker images
      community.docker.docker_prune:
        containers: true
        images: true
        images_filters:
          dangling: false
        networks: true
        volumes: false
        builder_cache: true
  tags:
    - full_deploy
    - cleanup