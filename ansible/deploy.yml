---

# Bootstrap

- name: Remove latency on masternodes before deployment starts
  hosts: masternodes
  become: true
  roles:
    - remove_fake_latency

- name: Set up swap and aws environment vars
  hosts: all
  gather_facts: true
  become: true
  pre_tasks:
    - name: Check if inside AWS
      ansible.builtin.uri:
        url: http://169.254.169.254/latest/meta-data
        timeout: 2
      register: aws_uri_check
      failed_when: false
    - name: Set AWS environment variable
      ansible.builtin.set_fact:
        is_aws_environment: '{{ aws_uri_check.status == 200 }}'
  roles:
    - role: aws
      when: is_aws_environment
    - swap

- name: Setup VPN
  hosts: vpn
  become: true
  roles:
    - role: openvpn
      when: openvpn_enabled
      tags: vpn

- name: Setup jq, Python, CWAgent and Docker
  hosts: all
  become: true
  pre_tasks:
    - name: Update apt cache and install jq
      ansible.builtin.apt:
        pkg:
          - jq
          - unzip
        update_cache: true
  vars:
    pip_package: python3-pip
    pip_install_packages:
      - name: docker
        version: "6.0.1"
      - name: docker-compose
        version: "1.29.2"
  roles:
    - geerlingguy.pip
    - role: geerlingguy.docker
      vars:
        docker_apt_arch: "{{ 'amd64' if ansible_architecture == 'x86_64' else 'arm64' }}"
        docker_install_compose: false
        docker_users:
          - ubuntu
    - docker_options
    - eternal_terminal
    - cwagent

- name: Configure tcpdump
  hosts: all
  become: true
  roles:
    - role: tcpdumpd
      when: dashd_network_logging != 0

- name: Setup logs
  hosts: logs_nodes
  become: true
  roles:
    - elastic_stack

- name: Setup load tester
  hosts: load_test
  become: true
  roles:
    - role: protobuf_compiler
    - role: load_tool

- name: Activate sporks
  hosts: wallet_nodes
  become: true
  roles:
    - role: activate_dashd_sporks
      when: dash_network != "mainnet" and dash_network != "testnet"
      delegate_to: '{{ play_hosts | first }}'


- name: Fund load tester nodes
  hosts: wallet_nodes
  become: true
  tasks:
    - name: Extract load tester addresses
      ansible.builtin.set_fact:
        load_tester_addresses: "{{ load_testers.values() | map(attribute='wallet.address') | list }}"

    - name: Include funding for load testers
      ansible.builtin.include_tasks: ./roles/mn_fund_collateral/tasks/fund_collateral.yml
      vars:
        payment_targets: "{{ load_tester_addresses }}"
        amount: "{{ load_tester_wallet_amount }}"

# todo: partially working code causes errors in deploy, comment out for now and fix later
# - name: Create governance proposals
#   hosts: wallet_nodes
#   become: true
#   roles:
#     - role: generate_proposals
#       when: governance_proposal_count > 0

- name: Set up core and platform on HP masternodes
  hosts: hp_masternodes
  become: true
  pre_tasks:
    - name: Check inventory for HP masternodes
      ansible.builtin.set_fact:
        node: "{{ hp_masternodes[inventory_hostname] }}"
      tags: always
      when: inventory_hostname in hp_masternodes
  roles:
    - role: dash_cli
    - role: dashmate
    - role: mn_status_report
    - role: elastic_beats
      core_container_name: core
      abci_logs_path: "{{ dashmate_logs_dir }}"

- name: Set up protx diff script
  hosts: masternodes
  become: true
  roles:
    - role: mn_protx_diff

- name: Set up fake latency on masternodes
  hosts: masternodes
  become: true
  roles:
    - role: add_fake_latency
      when: masternode_network_latency
    - role: remove_fake_latency
      when: not masternode_network_latency

- name: Generate dash.conf for configs repo
  hosts: localhost
  roles:
    - dash-conf

- name: Clean up
  hosts: all
  become: true
  tasks:
    - name: Prune unused Docker images
      community.docker.docker_prune:
        containers: true
        images: true
        images_filters:
          dangling: false
        networks: true
        volumes: false
        builder_cache: true
